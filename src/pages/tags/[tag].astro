---
import BaseLayout from "../../layouts/BaseLayout.astro";
import BlogPost from "../../components/BlogPost.astro";

export async function getStaticPaths() {
  const allPosts = (await Astro.glob("../posts/*.{md,mdx}")).filter(
    (post) => !post.frontmatter.draft
  );
  allPosts.sort(
    (a, b) =>
      new Date(a.frontmatter.pubDate).getTime() -
      new Date(b.frontmatter.pubDate).getTime()
  );

  const uniqueTags = [
    ...new Set(allPosts.map((post) => post.frontmatter.tags).flat()),
  ];
  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post) =>
      post.frontmatter.tags.includes(tag)
    );
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}

const { tag } = Astro.params;
const { posts } = Astro.props;
---

<BaseLayout pageTitle={tag}>
  <div class="columns is-size-4">
    <div class="column">
      <p>Posts tagged with {tag}</p>
      {
        [...posts]
          .reverse()
          .reduce((rows, post, index) => {
            if (index % 3 === 0) {
              rows.push([]);
            }
            rows[rows.length - 1].push(
              <div class="column">
                <BlogPost
                  url={post.url}
                  title={post.frontmatter.title}
                  date={post.frontmatter.pubDate}
                  description={post.frontmatter.description}
                />
              </div>
            );
            return rows;
          }, [])
          .map((row, index) => <div class="columns">{row}</div>)
      }
    </div>
  </div>
</BaseLayout>
