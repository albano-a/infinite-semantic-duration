---
import BaseLayout from "../layouts/BaseLayout.astro";
import Greeting from "../components/Greeting";
import BlogPost from "../components/BlogPost.astro";

const pageTitle = "Infinite Semantic Duration";
const allPosts = await Astro.glob("../pages/posts/*.{md,mdx}");
allPosts.sort((a, b) => new Date(a.frontmatter.pubDate).getTime() - new Date(b.frontmatter.pubDate).getTime());
---

<BaseLayout pageTitle={pageTitle}>
  <Greeting
    client:load
    messages={[
      "Where is your crown, King Nothing?",
      "I'm your life, and I no longer care.",
      "I rule the midnight air, the destroyer!",
      "MASTER! MASTER!",
      "Exit light, enter night.",
      "Life it seems, will fade away. Drifting further every day.",
      "Forever trusting who we are, and nothing else matters.",
      "All that is, ever, ever was, will be ever twisting, turning through the never.",
      "You can take your fucking time",
      "And though this is tragic, at least I found the end",
      "Justice is served!",
      "Of course we look back because we cannot bear to look forward",
    ]}
  />
  <hr />
  <div class="columns is-size-4">
    <div class="column">
      <p class="has-text-justified">
        Welcome to Infinite Semantic Duration. Here, you will find the small
        corner of the internet owned by me (or Netlify, but whatever). Here I
        will post random stuff, about coding, geophysics, and etc. Click on <a
          href="/blog/">Blog</a
        >
        to see the posts, or click in one of the posts bellow.
      </p>
      {
        [...allPosts]
          .reverse()
          .reduce((rows, post, index) => {
            if (index % 3 === 0) {
              rows.push([]);
            }
            rows[rows.length - 1].push(
              <div class="column">
                <BlogPost
                  url={post.url}
                  title={post.frontmatter.title}
                  date={post.frontmatter.pubDate}
                  description={post.frontmatter.description}
                />
              </div>
            );
            return rows;
          }, [])
          .map((row, index) => <div class="columns">{row}</div>)
      }
    </div>
  </div>
  
</BaseLayout>
